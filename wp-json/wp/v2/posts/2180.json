{"id":2180,"date":"2020-07-31T15:58:07","date_gmt":"2020-07-31T15:58:07","guid":{"rendered":"https:\/\/ostif.org\/?p=2180"},"modified":"2020-12-19T00:15:15","modified_gmt":"2020-12-19T00:15:15","slug":"the-ostif-audit-of-monero-clsag-is-complete-results","status":"publish","type":"post","link":"https:\/\/ostif.org\/the-ostif-audit-of-monero-clsag-is-complete-results\/","title":{"rendered":"The OSTIF Audit of Monero CLSAG is Complete! &#8211; Results"},"content":{"rendered":"<p><a href=\"https:\/\/ostif.org\">OSTIF<\/a>, working with the <a href=\"http:\/\/reddit.com\/r\/monero\">Monero Community<\/a>, the Monero development team, <a href=\"https:\/\/web.getmonero.org\/resources\/research-lab\/\">Monero Research Lab<\/a> and <a href=\"https:\/\/sweetwater.consulting\/\">Sweetwater Asset Consulting<\/a>, has completed our latest security review of Monero CLSAG.<\/p>\n<div class=\"mceTemp\"><\/div>\n<figure id=\"attachment_2202\" aria-describedby=\"caption-attachment-2202\" style=\"width: 400px\" class=\"wp-caption aligncenter\"><img decoding=\"async\" loading=\"lazy\" class=\"size-full wp-image-2202\" src=\"https:\/\/ostif.org\/wp-content\/uploads\/2020\/07\/clsag3.png\" alt=\"\" width=\"400\" height=\"86\" srcset=\"https:\/\/ostif.org\/wp-content\/uploads\/2020\/07\/clsag3.png 400w, https:\/\/ostif.org\/wp-content\/uploads\/2020\/07\/clsag3-300x65.png 300w\" sizes=\"(max-width: 400px) 100vw, 400px\" \/><figcaption id=\"caption-attachment-2202\" class=\"wp-caption-text\">Image by https:\/\/github.com\/MrMon0cle<\/figcaption><\/figure>\n<p>Concise Linkable Spontaneous Anonymous Group signatures are a new variant of Monero&#8217;s current MLSAG (Multilayered Linkable Spontaneous Anonymous Group signature) scheme. Overall, it promises to further reduce the size of Monero signatures while maintaining all of the privacy characteristics of Monero.<\/p>\n<p>JP Aumasson and Antony Vennard conducted a two phase review of CLSAG. First, they reviewed the theoretical construction presented in the Monero CLSAG paper by Brandon Goodell, Sarang Noether, and Arthur Blue. The latest version is published here:\u00a0 <a href=\"https:\/\/eprint.iacr.org\/2019\/654.pdf\">https:\/\/eprint.iacr.org\/2019\/654.pdf<\/a> Second, they reviewed the code as it will be implemented in Monero to ensure that the implementation maintains the security properties that the paper establishes. Additionally, the CLSAG code was reviewed for general code errors that could lead to security issues.<\/p>\n<p>Because of this audit, the foundational design of CLSAG has improved through improvements to the formal paper, and peer review has verified that the overall security of the scheme is reasonably sound and ready for live use.<\/p>\n<h2><strong>Review of the CLSAG Paper<\/strong><\/h2>\n<p>Proofs in cryptography are similar to proofs in mathematics, where security properties that are assumed must have prior work that confirms that the assumption made by the researchers is true. You build new ideas on these base assumptions to create something new and novel, and previous proofs support your novel construction&#8217;s claims be it for security, privacy, anonymity, unforgeability, or other functionality that you seek.\u00a0 The findings from Jean-Philippe and Antony led to many improvements to the paper for academic rigor. This includes problems like unsupported security assumptions, readability issues,\u00a0 and properly defining the definitions of terms. These are largely issues with an academic proof that would not affect the strength of CLSAG, however, the paper serves as a blueprint for building a novel signature scheme, and errors in proofs can lead to unforeseen weaknesses in the design and implementation phases of the code.<\/p>\n<blockquote><p>&#8220;We have a good confidence that the construction proposed satisfies the intended security goals, yet a moderate confidence that the proofs are entirely valid.&#8221;<\/p><\/blockquote>\n<p><span style=\"color: #ff0000;\"><strong>After the edits to the CLSAG paper, the auditors are more confident that CLSAG has strong, valid, security proofs.<\/strong><\/span><\/p>\n<p>Overall the team found that CLSAG is well constructed for its use-case in Monero. Some gaps were identified that may affect the overall security strength of the scheme, but the audit team found that the security is likely &#8220;strong enough&#8221; to thwart any attempts to break the signature scheme.<\/p>\n<h2><strong>Review of the CLSAG Implementation in Monero<\/strong><\/h2>\n<p>Monero CLSAG&#8217;s code was reviewed using both static and dynamic analysis, meaning JP and Antony both manually reviewed the code and used automated tools to search for additional potential problems (like <a href=\"https:\/\/en.wikipedia.org\/wiki\/Cppcheck\">cppCheck<\/a>, <a href=\"https:\/\/github.com\/github\/codeql\">CodeQL<\/a>, and <a href=\"https:\/\/clang.llvm.org\/extra\/clang-tidy\/\">clang-tidy<\/a>).<\/p>\n<p>Overall, the team found no major issues with the implementation. Suggestions were made to improve the design in a future version of CLSAG, such as using built-in features of C++ to securely erase data from memory after its use.<\/p>\n<blockquote><p>&#8220;Overall, we believe the code implements the CLSAG scheme as desired accurately and<br \/>\nprovides a high level security.&#8221;<\/p><\/blockquote>\n<p>The audit team found that the code is clean, easy to read, and well designed. Additionally, the CLSAG code reuses well-tested and well-understood components in its design. Lastly, the code is also well commented for understanding error-handling. Being a C++ application, the authors recommend extending Monero&#8217;s current unit-testing and fuzzing to include CLSAG&#8217;s code to further check for general C++ problems like null pointer errors, bounds checking, memory handling, and error handling.<\/p>\n<p>Only two recommendations were made by the reviewers:<\/p>\n<h3>key struct misuse prevention<\/h3>\n<p>The reviewers recommend an improved technique to ensure that secure memory erasure takes place after data is used and no longer required.<\/p>\n<h3>Unnecessary code duplication<\/h3>\n<p>There are two functions in CLSAG that perform nearly-identical functions and can be combined. This is to further simplify code as a best practice and does not impact security, privacy, or performance.<\/p>\n<h2><strong>The CLSAG Audit Paper<\/strong><\/h2>\n<p>As always, all of OSTIF&#8217;s sponsored research is available, in full, for free. Consider supporting our work through <a href=\"https:\/\/ostif.org\/donate-to-ostif\/\">donating to OSTIF<\/a> and encouraging your company to <a href=\"https:\/\/ostif.org\/sponsorship\/\">sponsor OSTIF&#8217;s security research<\/a>. We would like to extend a special thank you to the Monero community for funding this project and assisting with OSTIF&#8217;s operational expenses.<\/p>\n<p>The full paper is available here: <a href=\"https:\/\/ostif.org\/wp-content\/uploads\/2020\/07\/ostif-clsag-audit-final-public.pdf\">https:\/\/ostif.org\/wp-content\/uploads\/2020\/07\/ostif-clsag-audit-final-public.pdf<\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>OSTIF, working with the Monero Community, the Monero development team, Monero Research Lab and Sweetwater Asset Consulting, has completed our latest security review of Monero CLSAG. Concise Linkable Spontaneous Anonymous Group signatures are a new variant of Monero&#8217;s current MLSAG (Multilayered Linkable Spontaneous Anonymous Group signature) scheme. Overall, it promises to further reduce the size [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":2466,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[69,57],"tags":[122,120,118,121,26],"_links":{"self":[{"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/posts\/2180"}],"collection":[{"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/comments?post=2180"}],"version-history":[{"count":19,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/posts\/2180\/revisions"}],"predecessor-version":[{"id":2203,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/posts\/2180\/revisions\/2203"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/media\/2466"}],"wp:attachment":[{"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/media?parent=2180"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/categories?post=2180"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/ostif.org\/wp-json\/wp\/v2\/tags?post=2180"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}